name: release

on:
  workflow_dispatch

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v4

    - uses: astral-sh/setup-uv@v5
      with:
        python-version: ${{ matrix.python-version }}
    - shell: bash
      run: |
        make setup
    - shell: bash
      run: |
        make check
    - name: Test
      shell: bash
      if: matrix.os == 'ubuntu-latest'
      env:
        MPLBACKEND: 'agg'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb libqt5widgets5
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        export DISPLAY=:99
        make test
    - name: Run examples
      shell: bash
      if: matrix.os != 'windows-latest'
      env:
        MPLBACKEND: agg
      run: |
        labelme --help
        labelme --version
        (cd examples/primitives && labelme_json_to_dataset primitives.json && rm -rf primitives_json)
        (cd examples/tutorial && rm -rf apc2016_obj3_json && labelme_json_to_dataset apc2016_obj3.json && python load_label_png.py && git checkout -- .)
        (cd examples/semantic_segmentation && rm -rf data_dataset_voc && ./labelme2voc.py data_annotated data_dataset_voc --labels labels.txt && git checkout -- .)
        (cd examples/instance_segmentation && rm -rf data_dataset_voc && ./labelme2voc.py data_annotated data_dataset_voc --labels labels.txt && git checkout -- .)
        (cd examples/video_annotation && rm -rf data_dataset_voc && ./labelme2voc.py data_annotated data_dataset_voc --labels labels.txt && git checkout -- .)
        uv pip install 'lxml<5.0.0'  # for bbox_detection/labelme2voc.py
        (cd examples/bbox_detection && rm -rf data_dataset_voc && ./labelme2voc.py data_annotated data_dataset_voc --labels labels.txt && git checkout -- .)
        uv pip install cython && uv pip install pycocotools  # for instance_segmentation/labelme2coco.py
        (cd examples/instance_segmentation && rm -rf data_dataset_coco && ./labelme2coco.py data_annotated data_dataset_coco --labels labels.txt && git checkout -- .)
    - name: Build wheel and install from it
      shell: bash
      run: |
        make build
        uv pip install dist/labelme-*.whl
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
    - name: pyinstaller
      shell: bash
      run: |
        pip install pyinstaller
        LABELME_PATH=./labelme \
        OSAM_PATH=$(python -c 'import os, osam; print(os.path.dirname(osam.__file__))') \
        pyinstaller labelme/__main__.py \
          --name=Labelme \
          --windowed \
          --noconfirm \
          --add-data=${OSAM_PATH}/_models/yoloworld/clip/bpe_simple_vocab_16e6.txt.gz:osam/_models/yoloworld/clip \
          --add-data=${LABELME_PATH}/config/default_config.yaml:labelme/config \
          --add-data=${LABELME_PATH}/icons/*:labelme/icons \
          --add-data=${LABELME_PATH}/translate/*:translate \
          --icon=${LABELME_PATH}/icons/icon.png \
          --onefile
    - uses: actions/upload-artifact@v4
      with:
        name: Labelme
        path: dist/Labelme.exe
